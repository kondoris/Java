
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class RemainderQuotient {
    public static void addComponentsToPane(Container pane) {

        pane.setLayout(new GridBagLayout());
        GridBagConstraints constraints = new GridBagConstraints();
        constraints.fill = GridBagConstraints.HORIZONTAL;

        constraints.weightx = 1;
        constraints.gridx = 0;
        constraints.gridy = 0;
        pane.add(new JLabel("Нешифрованный текст:"), constraints);

        constraints.gridx = 1;
        constraints.gridy = 0;
        constraints.gridwidth = 2;
        JTextField dividendTextField = new JTextField();
        pane.add(dividendTextField, constraints);

        constraints.gridx = 0;
        constraints.gridy = 1;
        pane.add(new JLabel("Зашифрованный текст:"), constraints);

        constraints.gridx = 1;
        constraints.gridy = 1;
        constraints.gridwidth = 2;
        JTextField dividerTextField = new JTextField();
        pane.add(dividerTextField, constraints);

        constraints.gridx = 5;
        constraints.gridy = 0;
        JButton encryptedButton = new JButton("Зашифровать");
        encryptedButton.setPreferredSize(new Dimension( 40, 20));
        pane.add(encryptedButton, constraints);

        constraints.gridx = 3;
        constraints.gridy = 0;
        JLabel encryptedLabel = new JLabel("Зашифрованный текст: ");
        pane.add(encryptedLabel, constraints);

        constraints.gridx = 3;
        constraints.gridy = 1;
        JLabel decryptedLabel = new JLabel("Расшифрованный текст: ");
        pane.add(decryptedLabel, constraints);

        constraints.gridx = 5;
        constraints.gridy = 1;
        JButton decryptedButton = new JButton("Расшифровать");
        decryptedButton.setPreferredSize(new Dimension( 40, 20));
        pane.add(decryptedButton, constraints);

        encryptedButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                String encr = transform(dividendTextField.getText());
                encryptedLabel.setText("Зашифрованный текст: " + encr);
                //Integer dividend = Integer.parseInt(dividendTextField.getText());
                //Integer divider = Integer.parseInt(dividerTextField.getText());
                //quotientLabel.setText("Частное: " + dividend / divider);
                //remainderLabel.setText("Остаток: " + dividend % divider);
            }
        });

        decryptedButton.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                String encr = transform(dividerTextField.getText());

                decryptedLabel.setText("Расшифрованный текст: " + encr);
                //Integer dividend = Integer.parseInt(dividendTextField.getText());
                //Integer divider = Integer.parseInt(dividerTextField.getText());
                //quotientLabel.setText("Частное: " + dividend / divider);
                //remainderLabel.setText("Остаток: " + dividend % divider);
            }
        });
    }
    public static String transform(String str) {
        String transformedString = "";

        for(int i = 0;i < str.length();i++) {
            char currentElem = str.charAt(i);
                switch(currentElem) {
                    case 'q':
                        currentElem = 'z';
                        break;
                    case 'w':
                        currentElem = 'x';
                        break;
                    case 'e':
                        currentElem = 'c';
                        break;
                    case 'r':
                        currentElem = 'v';
                        break;
                    case 't':
                        currentElem = 'b';
                        break;
                    case 'y':
                        currentElem = 'n';
                        break;
                    case 'u':
                        currentElem = 'm';
                        break;
                    case 'i':
                        currentElem = 'l';
                        break;
                    case 'o':
                        currentElem = 'k';
                        break;
                    case 'p':
                        currentElem = 'j';
                        break;
                    case 'a':
                        currentElem = 'h';
                        break;
                    case 's':
                        currentElem = 'g';
                        break;
                    case 'd':
                        currentElem = 'f';
                        break;
                    case 'z':
                        currentElem = 'q';
                        break;
                    case 'x':
                        currentElem = 'w';
                        break;
                    case 'c':
                        currentElem = 'e';
                        break;
                    case 'v':
                        currentElem = 'r';
                        break;
                    case 'b':
                        currentElem = 't';
                        break;
                    case 'n':
                        currentElem = 'y';
                        break;
                    case 'm':
                        currentElem = 'u';
                        break;
                    case 'l':
                        currentElem = 'i';
                        break;
                    case 'k':
                        currentElem = 'o';
                        break;
                    case 'j':
                        currentElem = 'p';
                        break;
                    case 'h':
                        currentElem = 'a';
                        break;
                    case 'g':
                        currentElem = 's';
                        break;
                    case 'f':
                        currentElem = 'd';
                        break;
                    default:
                        currentElem = '\u0000';
                        break;
                }
            transformedString += currentElem;
        }


        return transformedString;
    }

    private static void createAndShowGUI() {
        JFrame frame = new JFrame("Word encryption");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 100);
        frame.setResizable(false);
        addComponentsToPane(frame.getContentPane());
        frame.setVisible(true);
    }
    public static void main(String[] args) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
}
